# 定义工作流程的名称，这在 GitHub Actions UI 中用于标识你的工作流程
name: Build and Deploy

# 定义触发工作流程的事件。在这里，它配置为在推送到 `main` 分支时触发。
on:
  push:
    branches:
      - main  # 或者你的默认分支名，比如 master

# 定义工作流程中的作业。每个作业运行在由 GitHub 提供的运行器上。
jobs:
  # 这是你定义的作业的名称，可以随意命名，这里命名为 "build-and-deploy"
  build-and-deploy:
    # 指定作业运行的虚拟环境。这里使用的是最新版的 Ubuntu
    runs-on: ubuntu-latest
    
    # 定义要在此作业中执行的步骤
    steps:
      - uses: actions/checkout@v2  # 使用 actions/checkout@v2 检出你的仓库代码到运行器

      - name: Setup Node  # 步骤名称
        uses: actions/setup-node@v2  # 使用 actions/setup-node@v2 设置 Node.js 环境
        with:
          node-version: '18'  # 指定 Node.js 的版本，这里使用 18

      - name: Install Dependencies  # 步骤名称
        run: npm install  # 运行 npm install 命令来安装项目依赖

      - name: Build  # 步骤名称
        run: npm run build  # 运行构建命令，对于 Astro 项目，这通常会生成静态文件到指定目录

      - name: Deploy  # 步骤名称
        uses: peaceiris/actions-gh-pages@v3  # 使用 peaceiris/actions-gh-pages@v3 将构建的内容部署到 gh-pages 分支
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 提供的 token 进行授权，以便于推送到 gh-pages 分支
          publish_dir: ./dist  # 指定了构建后的静态文件存放目录，这里的 "./" 通常指的是你的 Git 仓库的根目录
